<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Home cliente</title>
    <link rel="preconnect" href="https://fonts.googleapis.com">
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
<link href="https://fonts.googleapis.com/css2?family=Arvo:ital,wght@0,400;0,700;1,400;1,700&display=swap" rel="stylesheet">

</head>
<body>
    <div class="header">
        <div class="logo">
            <img src="/img/Logo.png" alt="Autofix Logo"> 
        </div>
    </div>

    

    <div class="content">
        <div class="title">
            <h1>Área do Cliente</h1>
            
            <div class="icon">
                <a href="/meu_veiculo_cliente">
                    <img src="/img/carroicon.png" alt="Meus Veículos">
                </a>
                <a href="/acompanhar_cliente">
                    <img src="/img/ampulhetaicon.png" alt="Acompanhar Serviço">
                </a>
                <img src="/img/icon-user.png" alt="Perfil" id="profileIcon" style="cursor: pointer; width: 30px; height: auto;">
            </div>
        </div>

        <div class="welcome">
            <h2>Bem Vindo, Gustavo</h2>
        </div>  
        
        <div class="menu">
            <a href="" class="active">Aprovar Entrada</a>
            <a href="/aprovar_orcamento_cliente" class="active">Aprovar Orçamento</a>
        </div>

        <div class="progress-container">  
            <div class="progress-step" id="step-entrada">  
                <div class="circle" id="circle-entrada">  
                    <img src="//img/agurdando-aprovacao.jpeg" alt="Ícone Entrada">  
                </div>  
                <p>Entrada Aprovada</p>  
            </div>  
            <div class="progress-step" id="step-orcamento">  
                <div class="circle" id="circle-orcamento">  
                    <img src="img/aprovada.jpeg" alt="Ícone Orçamento">  
                </div>  
                <p>Orçamento Aprovado</p>  
            </div>  
            <div class="progress-step" id="step-manutencao">  
                <div class="circle" id="circle-manutencao">  
                    <img src="img/manutencao-em-andamento.jpeg" alt="Ícone Manutenção">  
                </div>  
                <p>Manutenção em Andamento</p>  
            </div>  
            <div class="progress-step" id="step-finalizada">  
                <div class="circle" id="circle-finalizada">  
                    <img src="/img/servico-finalizado.jpeg" alt="Ícone Finalizada">  
                </div>  
                <p>Manutenção Finalizada</p>  
            </div>  
            <div class="progress-step" id="step-retirada">  
                <div class="circle" id="circle-retirada">  
                    <img src="/img/aguardando-retirada.jpeg" alt="Ícone Retirada">  
                </div>  
                <p>Aguardando Retirada</p>  
            </div>  
        </div>  
        
        <div class="progress-bar-wrapper">  
            <div class="progress-bar">  
                <div class="progress-bar-value" id="progress-bar-value"></div>  
            </div>  
        </div>  
    </div> 

    <!-- Modal -->
    <div id="profileModal" class="modal">
        <div class="modal-content">
            <span class="close">&times;</span>
            <h2>Perfil do Usuário</h2>
            <p>Nome: Gustavo</p>
            <p>Email: gustavo@email.com</p>
            <a href="/index1"><button id="logoutButton" class="logout-btn">Sair</button></a>
        </div>
    </div>

    <script>
        // Simulação de status  
        const steps = [  
            { id: 'step-entrada', circleId: 'circle-entrada' },  
            { id: 'step-orcamento', circleId: 'circle-orcamento' },  
            { id: 'step-manutencao', circleId: 'circle-manutencao' },  
            { id: 'step-finalizada', circleId: 'circle-finalizada' },  
            { id: 'step-retirada', circleId: 'circle-retirada' }  
        ];  

        let currentStepIndex = 0;  

        function updateProgress() {  
            if (currentStepIndex < steps.length) {  
                const currentStep = steps[currentStepIndex];  
                document.getElementById(currentStep.id).classList.add('complete');  
                document.getElementById(currentStep.circleId).classList.add('complete');  
                
                // Atualiza a largura da barra de progresso  
                const progressBarValue = document.getElementById('progress-bar-value');  
                const totalSteps = steps.length;  
                const newWidth = ((currentStepIndex + 1) / totalSteps) * 100; // Converte para porcentagem  
                progressBarValue.style.width = ${newWidth};
                
                currentStepIndex++;  
            }  
        }  

        // Atualiza o status a cada 3 segundos (simulação)  
        setInterval(updateProgress, 3000); 

        // Obtém os elementos do DOM
        const modal = document.getElementById("profileModal");
        const profileIcon = document.getElementById("profileIcon");
        const closeModalSpan = document.getElementsByClassName("close")[0];

        // Quando o usuário clica na imagem de perfil, abre o modal
        profileIcon.onclick = function() {
            modal.style.display = "block";
        }

        // Quando o usuário clica no <span> (x), fecha o modal
        closeModalSpan.onclick = function() {
            modal.style.display = "none";
        }

        // Quando o usuário clica fora do modal, fecha o modal
        window.onclick = function(event) {
            if (event.target == modal) {
                modal.style.display = "none";
            }
        }
    </script>
</body>
<style>
.progress-container {  
            display: flex;  
            justify-content: space-between;  
            align-items: center;  
            margin-top: 50px;   
            padding-bottom: 20px;  
            width: 80%;  
            margin-left: auto;  
            margin-right: auto;  
        }  

        .progress-step {  
            text-align: center;  
            position: relative;  
        }  

        .circle {  
            width: 60px;  
            height: 60px;  
            border-radius: 50%;  
            border: 2px solid #4caf50; /* Cor do círculo */  
            display: flex;  
            align-items: center;  
            justify-content: center;  
            margin: 0 auto;  
            transition: background-color 0.3s;  
            position: relative;  
        }  

        .circle.complete {  
            background-color: #4caf50; /* Círculo verde quando completo */  
        }  

        .circle img {  
            width: 24px; /* Tamanho do ícone */  
            height: 24px;  
            display: block; /* Mostra o ícone inicialmente */  
        }  

        .progress-bar-wrapper {  
            margin: 0 auto;  
            width: calc(80% - 50px);  
            margin-top: 20px;  
            position: relative;  
        }  

        .progress-bar {  
            position: relative;  
            height: 4px;  
            background-color: #ccc;  
        }  

        .progress-bar-value {  
            content: '';  
            position: absolute;  
            top: 0;  
            height: 100%;  
            background-color: #4caf50; /* Cor verde */  
            transition: width 0.3s;  
            width: 0%; /* Inicializa com 0% */  
        }

body {
    font-family: 'Arvo', serif;
    margin: 0;
    padding: 0;
    background-color: #f8f8f8;
    font-size: 16px;
}

.header {
    background-color: #505050;
    color: white;
    padding: 10px 20px;
    display: flex;
    justify-content: space-between;
    align-items: center;
}

.logout-btn {
    background-color: #e74c3c; /* Cor vermelha */
    color: white;
    padding: 10px 20px;
    border: none;
    border-radius: 5px;
    font-size: 16px;
    cursor: pointer;
    margin-top: 20px; /* Espaço no topo */
    width: 100%; /* Largura total do botão */
    text-align: center;
}

.logout-btn:hover {
    background-color: #c0392b; /* Cor mais escura no hover */
}

.logo {
    display: flex;
    margin: 0 auto;

}

.logo img {
    height: 60px;

}

.content {
    padding: 20px;
}

h1{
    font-size: 16px;
}

.welcome {
    margin-bottom: 30px;
}

.welcome h2 {
    font-size: 20px;
    color: #505050;
}

.menu {
    display: flex;
    justify-content: space-between;
    margin-bottom: 20px;
    border-bottom: 1px solid #ccc;
}

.menu a {
    padding: 10px;
    text-decoration: none;
    color: #000;
    font-weight: bold;
    border-bottom: 2px solid transparent;
}

.menu a.active {
   margin: 0 auto;
   
   
}

.cards {
    display: flex;
    justify-content: center; /* Centraliza os cards horizontalmente */
    align-items: center; /* Centraliza verticalmente */
    gap: 20px; /* Adiciona espaço entre os cards */
    margin-top: 20px; /* Espaço no topo */
}

.approval-card, .expired-card {
    flex: 1; /* Cards ocupam o mesmo espaço */
    padding: 20px;
    margin: 10px;
    background-color: white;
    border-radius: 10px; /* Arredondando os cantos dos cards */
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); /* Adiciona sombra */
    max-width: 300px; /* Limita o tamanho máximo dos cards */
    text-align: left; /* Alinhamento do texto à esquerda */
    box-sizing: border-box;
    transition: transform 0.3s ease; /* Efeito de transição ao passar o mouse */
}

.approval-card:hover, .expired-card:hover {
    transform: scale(1.05); /* Efeito de zoom ao passar o mouse */
}

.approval-card h2 {
    color: #ff7f27;
    font-size: 18px;
    margin-bottom: 10px; /* Espaço entre o título e o conteúdo */
}

.approval-card p {
    margin: 5px 0;
    font-size: 16px;
    color: #333;
}

.expired-card h2 {
    color: #7c1b1b;
    font-size: 18px;
    margin-bottom: 10px;
}

.expired-card p {
    margin: 5px 0;
    font-size: 16px;
    color: #333;
}

.icon {
    display: flex;           /* Usa Flexbox para o layout dos ícones */
  justify-content: flex-end; /* Alinha os ícones à direita */
  gap: 10px;                 /* Espaço entre os ícones (opcional) */
  padding-right: 20px;       /* Espaço adicional à direita (opcional) */
}

.reject {
    background-color: red;
    border-radius: 5px;
    border: none;

}

.confirm {
    background-color: rgb(9, 189, 9);
    border-radius: 5px;
    border: none;

}
.modal {
    display: none; /* Escondido por padrão */
    position: fixed; /* Fica em cima da tela */
    z-index: 1; /* Fica na frente */
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    overflow: auto; /* Habilita scroll se necessário */
    background-color: rgba(0, 0, 0, 0.5); /* Fundo com opacidade */
}

/* Estilo para o conteúdo do modal */
.modal-content {
    background-color: #fff;
    margin: 15% auto; /* Centrado verticalmente */
    padding: 20px;
    border: 1px solid #888;
    width: 80%; /* Largura do modal */
    max-width: 400px; /* Largura máxima */
    border-radius: 10px; /* Cantos arredondados */
}

/* Estilo para o botão de fechar */
.close {
    color: #aaa;
    float: right;
    font-size: 28px;
    font-weight: bold;
}

.close:hover,
.close:focus {
    color: #000;
    text-decoration: none;
    cursor: pointer;
}

.icon img {
   width: 30px;   /* Define o tamanho padrão para todos os ícones */
   height: auto;  /* Mantém a proporção da imagem */
}


</style>
</html>