<!DOCTYPE html>
<html lang="pt-BR">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Arvo:ital,wght@0,400;0,700;1,400;1,700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="../public/css/reparos_veiculos_mecanico.css">
    <title>Reparos do veículo</title>
</head>

<body>
    <header>
        <img src="/img/logo.png" alt="Logo">
    </header>

    <div class="title">
        Reparos do veículo
    </div>
    
    <div class="search-bar">
        <a href="/manutencoes_andamento">
            <button class="back-button">
                <img src="/img/seta.png" alt="Voltar">
            </button>
        </a>
    </div>

    <div class="main-container">
        <div class="card-info">
            <div class="card-nome">
                <h4>Nome:</h4>
                <p><%= veiculo.nome_cliente %></p>
            </div>
            <div class="card-modelo">
                <h4>Carro:</h4>
                <p><%= veiculo.marca %> <%= veiculo.modelo %></p>
            </div>
        </div>

       <form action="/finalizar_manutencao" method="post">
        <input type="hidden" name="id_orcamento" value="<%= veiculo.id_orcamento %>"> <!-- Campo oculto para o id do orçamento -->
        <input type="hidden" name="placa" value="<%= veiculo.placa %>"> <!-- Campo oculto para a placa do veículo -->
        
    <div class="card-container">
        <% if (servicos.length === 0) { %>
            <p>Nenhum serviço encontrado para este orçamento.</p>
        <% } else { %>
            <% servicos.forEach(servico => { %>
                <div class="card-wrapper">
                    <input type="checkbox" id="check_<%= veiculo.id_orcamento %>_<%= servico.id %>_<%= servico.nome_servico.replace(/\s+/g, '_') %>">
                    <div class="card-content">
                        <p><%= servico.nome_servico %></p>
                    </div>
                </div>
            <% }); %>
        <% } %>
        <button type="submit" class="button" id="finalizarManutencao">Finalizar manutenção</button>
    </div>
</form>


    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const checkboxes = document.querySelectorAll('.card-wrapper input[type="checkbox"]');
            const finalizarButton = document.getElementById('finalizarManutencao');
    
            // Função para verificar se todos os checkboxes estão marcados
            function checkAllTicked() {
                return Array.from(checkboxes).every(checkbox => checkbox.checked);
            }
    
            // Verifica o estado do botão ao carregar a página
            finalizarButton.disabled = !checkAllTicked();
    
            checkboxes.forEach(checkbox => {
                const isChecked = localStorage.getItem(checkbox.id) === 'true';
                checkbox.checked = isChecked;
    
                checkbox.addEventListener('click', () => {
                    saveInfo(checkbox.id, checkbox.checked);
                    finalizarButton.disabled = !checkAllTicked(); // Atualiza o botão
                });
            });
        });
    
        function saveInfo(checkboxId, isChecked) {
            localStorage.setItem(checkboxId, isChecked);
            console.log("Checkbox " + checkboxId + " está " + (isChecked ? "marcado" : "desmarcado"));
        }
    </script>
    

        
</body>

<style>
    * {
        margin: 0;
        padding: 0;
        font-family: 'Arvo', serif; /* Use a fonte Arvo */
    }

    header {
        background-color: #000000;
        color: white;
        padding: 8px;
        text-align: center;
        position: relative;
    }

    header img {
        width: 200px;
        height: auto;
    }

    .header-content {
        position: relative;
    }

    .header-content .welcome {
        position: absolute;
        top: 8px;
        right: 8px;
    }



     .back-button {
        position: absolute;
        left: 0;
        margin-left: 10px;
        background-color: transparent;
        border: none;
        cursor: pointer;
    }

    .back-button img {
        width: 24px;
        height: 24px;
    }

    .search-bar .search-input-container {
        margin-left: 40px; /* Espaço para o botão de voltar */
        width: 60%;
    }

    .title {
        text-align: center;
        font-size: 24px;
        margin: 20px auto;
        color: #333333;
        width: 80%;
        display: flex;
        justify-content: center;
    }

    .main-container {
        display: flex;
        flex-direction: column;
        align-items: center;
        width: 80%;
        margin: 0 auto;
    }

    .card-info {
        display: flex;
        justify-content: center;
        align-items: center;
        gap: 100px; /* Espaço entre os cards de informação */
        width: 100%; /* Largura total para os cards de informação */
        margin-bottom: 20px; /* Espaço entre os cards de informação e os cards principais */

        
    }

    .card-nome, .card-modelo {
        background-color: #fff;
        border: 1px solid #ccc;
        border-radius: 5px;
        padding: 20px;
        text-align: center; /* Alinha o texto */
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
        height: auto; /* Ajusta a altura automaticamente */

        margin-bottom: 30px;
    }

    .card-container {
        display: flex;
        flex-direction: column;
        align-items: center;
        gap: 10px; /* Define o espaço entre os cards */
        width: 100%;
    }

    .card-wrapper {
    display: flex;
    align-items: center;
    width: 3000px;
    max-width: 600px; /* Define uma largura máxima para os cards */
    background-color: #fff;
    border: 1px solid #ccc;
    border-radius: 5px;
    padding: 20px;
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
    position: relative; /* Adiciona posição relativa ao card-wrapper */
}

.card-content {
    flex: 1; /* Garante que ocupe todo o espaço disponível */
    min-width: 150px; /* Define uma largura mínima */
    padding-left: 10px; /* Espaço para separar o checkbox do texto */
    word-wrap: break-word; /* Quebra a palavra caso seja muito longa */
}

    .card-wrapper input[type="checkbox"] {
        -webkit-appearance: none; /* Remove o estilo padrão do checkbox */
        appearance: none; /* Remove o estilo padrão do checkbox */
        width: 30px; /* Aumenta a largura do checkbox */
        height: 30px; /* Aumenta a altura do checkbox */
        border: 1px solid #ccc;
        border-radius: 3px;
        background-color: #fff;
        cursor: pointer;
        position: absolute; /* Posiciona o checkbox */
        right: 20px; /* Ajusta a posição do checkbox */
        top: 50%;
        transform: translateY(-50%); /* Centraliza verticalmente */
    }

    .card-wrapper input[type="checkbox"]:checked {
        background-color: green; /* Define a cor do check marcado */
    }

    .card-wrapper input[type="checkbox"]:checked::before {
        content: '\2713'; /* Adiciona o símbolo de check */
        display: block;
        position: absolute;
        top: 3px; /* Ajusta a posição vertical do símbolo */
        left: 8px; /* Ajusta a posição horizontal do símbolo */
        color: white;
        font-size: 15px; /* Aumenta o tamanho do símbolo de check */
    }

    .button {
        background-color: #138132;
        color: #fff;
        border: none;
        border-radius: 5px;
        padding: 10px 20px;
        cursor: pointer;
        text-decoration: none; /* Remove o sublinhado do link */
        display: inline-block; /* Permite o uso de padding e margin */
        transition: background-color 0.3s ease; /* Adiciona transição para a cor */

        margin-top: 60px;
    }

    .button:hover {
        background-color: #333; /* Muda a cor ao passar o mouse */
    }
</style>
</html>
